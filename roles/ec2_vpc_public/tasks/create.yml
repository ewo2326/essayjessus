---
- name: create ec2 instance
  local_action:
    module: ec2
    keypair: "{{ keypair }}"
    instance_type: "{{ instance_type }}"
    private_ip: "{{ private_ip }}"
    group: "{{ security_group }}"
    vpc_subnet_id: "{{ vpc_subnet_id }}"
    image: "{{ image }}"
    region: "{{ region }}"
    instance_tags:
     Name: "{{ inventory_hostname }}"
    zone: "{{ zone }}"
    aws_access_key: "{{ ec2_access_key }}"
    aws_secret_key: "{{ ec2_secret_key }}"
    security_token: "{{ security_token|default('') }}"
    ec2_url: "{{ ec2_url }}"
    volumes: "{{ volumes|default('') }}"
    ebs_optimized: "{{ ebs_optimized|default('no') }}"
    instance_profile_name: "{{ instance_profile_name|default('') }}"
    wait: yes
  register: ec2

- name: associate elastic ip with ec2 instance
  local_action:
    module: ec2_eip
    device_id: "{{ item }}"
    public_ip: "{{ public_ip }}"
    region: "{{ region }}"
    aws_access_key: "{{ ec2_access_key }}"
    aws_secret_key: "{{ ec2_secret_key }}"
    security_token: "{{ security_token|default('') }}"
    ec2_url: "{{ ec2_url }}"
    in_vpc: yes
    reuse_existing_ip_allowed: yes
  with_items: '{{ ec2.instance_ids }}'
  register: ec2_eip

- name: send mail about created instance
  local_action:
    module: mail
    subject: "New ec2 instance {{ inventory_hostname }} created"
    body: "New ec2 instance {{ inventory_hostname }} created on {{ ec2_eip.results[0].public_ip }}."
    from: "{{ mail_from }}"
    to: "{{ mail_to }}"
    charset: utf8
  ignore_errors: yes

- name: wait for the instance to boot checking ssh port
  local_action:
    module: wait_for
    host: "{{ public_ip }}"
    port: 22
    delay: 30
    connect_timeout: 10
    state: started
